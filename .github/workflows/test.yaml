name: Test

on:
  push:

jobs:
  test:
    name: test with ${{ matrix.env }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        env:
          - "3.13"
          - "3.12"
        os:
          - ubuntu-latest

    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.env }}'

      - name: Setup poetry cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-${{ matrix.env }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.env }}-poetry-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox tox-gh
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Run linters
        if: matrix.env != '3.12'
        run: |
          poetry run ruff check .
          poetry run ruff format --check .


      - name: Setup test suite
        run: tox run -vv --notest --skip-missing-interpreters false
        env:
          TOX_GH_MAJOR_MINOR: ${{ matrix.env }}

      - name: Run tests
        env:
          MONGODB_URL: mongodb://localhost:27017
          TOX_GH_MAJOR_MINOR: ${{ matrix.env }}
          CI: true
        run: tox run --skip-pkg-install
